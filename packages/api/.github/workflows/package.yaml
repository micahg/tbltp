name: Publish package to GitHub Packages
on:
  push:
    branches:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.get_version.outputs.package_version }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3 
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "package_version=$VERSION"
          echo "package_version=$VERSION" >> "$GITHUB_OUTPUT"
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v3
        with:
          name: serverjs
          path: server.js
  publish:
    needs: [build]  
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          scope: '@micahg'
      - uses: actions/download-artifact@v3
        with:
          name: serverjs
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  package:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Docker registry login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get the server js file
        uses: actions/download-artifact@v3
        with:
          name: serverjs
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        env:
          IMAGE_VERSION: ${{needs.build.outputs.package_version}}
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.version=${{ env.IMAGE_VERSION }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.IMAGE_VERSION }}
      - name: Docker Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$GITHUB_ACTOR@github.com"
          npm version patch
          VERSION=$(node -p "require('./package.json').version")
          BRANCH="release/$VERSION"
          echo "Checking out $BRANCH"
          git checkout -b "$BRANCH"
          git push --set-upstream origin "$BRANCH"