name: Test API
on:
  push:
    paths:
      - 'packages/api/**'
    branches-ignore:
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  MONGO_CACHE_PATH: ~/.cache/mongodb-binaries
  MONGO_BINARY: mongod-x86_64-ubuntu-7.0.0
  MONGOMS_VERSION: 7.0.0
  MONGOMS_DOWNLOAD_URL: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu2204-7.0.0.tgz
jobs:
  # test_yq:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: '18.x'
  #     - id: version-mono
  #       name: Get Versions
  #       run: |
  #         NEW_VERSION=$(node -p "require('./package.json').version")
  #         NEW_API_VERSION=$(node -p "require('./packages/api/package.json').version")
  #         NEW_API_IMAGE="ghcr.io/micahg/tbltp-api:$NEW_VERSION"
  #         NEW_MUI_VERSION=$(node -p "require('./packages/mui/package.json').version")
  #         NEW_MUI_IMAGE="ghcr.io/micahg/tbltp-mui:$NEW_VERSION"
  #         echo "new_version=$NEW_VERSION"
  #         echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
  #         echo "new_api_version=$NEW_API_VERSION"
  #         echo "new_api_version=$NEW_API_VERSION" >> "$GITHUB_OUTPUT"
  #         echo "new_api_image=$NEW_API_IMAGE"
  #         echo "new_api_image=$NEW_API_IMAGE" >> "$GITHUB_OUTPUT"
  #         echo "new_mui_version=$NEW_MUI_VERSION"
  #         echo "new_mui_version=$NEW_MUI_VERSION" >> "$GITHUB_OUTPUT"
  #         echo "new_mui_image=$NEW_MUI_IMAGE"
  #         echo "new_mui_image=$NEW_MUI_IMAGE" >> "$GITHUB_OUTPUT"
  #     - name: Test YQ
  #       run: |
  #         yq --version
  #         echo yq -i '.appVersion = "${{ steps.version-mono.outputs.new_version }}"' chart/Chart.yaml
  #         yq -i '.appVersion = "${{ steps.version-mono.outputs.new_version }}"' chart/Chart.yaml
  #         echo yq '.appVersion' chart/Chart.yaml
  #         yq '.appVersion' chart/Chart.yaml
  #         echo yq '.version' chart/Chart.yaml
  #         yq '.version' chart/Chart.yaml
  #         git status
  #         git diff
  test_api:
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.get_version.outputs.package_version }}
    permissions:
      contents: read
    steps:
    # cache download ./node_modules/.cache
      - uses: actions/checkout@v3 
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Cache Mongo Binary
        uses: actions/cache@v3
        with:
          path: ${{ env.MONGO_CACHE_PATH }}/${{ env.MONGO_BINARY }}
          key: ${{ env.MONGO_BINARY }}
      - name: Node Modules
        run: npm ci
      - name: Lint Code
        run: npm run lint:api
      - name: Prune Dead Code
        run: npm run prune -w packages/api
      - name: Unit Test
        run: npm run test -w packages/api
  build_api:
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.get_version.outputs.package_version }}
    permissions:
      contents: read
    steps:
    # cache download ./node_modules/.cache
      - uses: actions/checkout@v3 
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - run: npm ci
      - run: npm run build -w packages/api